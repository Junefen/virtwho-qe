; this file is used to define all necessary options for virt-who testing
; all default values are null, need to update according to the test requirements

[host]
; the rhel system to run virt-who service
; virtwho/docker.py and kickstart.py can help to install a host
ip=
user=
passwd=

[repo]
; the base url of the rhel compose for special cases
rhel_base=

[proxy]
; a proxy server is necessary if run the related test cases
server=
port=

[rhsm]
; the datas of stage or product candlepin
server=
user=
passwd=
org=

[satellite]
; the datas of satellite server
; virtwho/satellite.py can help to deploy a satellite server
server=
admin_user=
admin_passwd=
default_org=
default_env=
extra_org=
activation_key=

[vcenter]
; esx_ datas are for the esxi host which the guest is based on
vcenter_ip=
vcenter_admin_user=
vcenter_admin_passwd=
vcenter_ssh_user=
vcenter_ssh_password=
esx_user=
esx_passwd=
guest_name=
guest_user=
guest_passwd=
; hypervisor-builder can help to get below datas by searching guest name
esx_ip=
esx_uuid=
esx_hwuuid=
esx_hostname=
esx_version=
esx_state=
esx_cpu=
esx_cluster=
guest_ip=
guest_uuid=
guest_state=

[xen]
xen_ip=
xen_user=
xen_passwd=
guest_name=
guest_user=
guest_passwd=
; hypervisor-builder can help to get below datas by searching guest name
xen_uuid=
xen_hwuuid=
xen_hostname=
xen_version=
xen_state=
xen_cpu=
guest_ip=
guest_uuid=
guest_state=

[hyperv]
hyperv_ip=
hyperv_user=
hyperv_passwd=
guest_name=
guest_user=
guest_passwd=
; hypervisor-builder can help to get below data by searching guest name
hyperv_uuid=
hyperv_hwuuid=
hyperv_hostname=
hyperv_version=
hyperv_state=
hyperv_cpu=
guest_ip=
guest_uuid=
guest_state=

[rhevm]
; vdsm_ datas are for the vdsm host which the guest based on
rhevm_ip=
rhevm_admin_user=
rhevm_admin_passwd=
rhevm_ssh_user=
rhevm_ssh_passwd=
vdsm_user=
vdsm_passwd=
guest_name=
guest_user=
guest_passwd=
; hypervisor-builder can help to get below data by searching guest name
vdsm_ip=
vdsm_uuid=
vdsm_hwuuid=
vdsm_hostname=
vdsm_version=
vdsm_state=
vdsm_cpu=
vdsm_cluster=
vdsm_datacenter=
guest_ip=
guest_uuid=
guest_state=

[libvirt-local]
; the virt-who host is also the libvirt host
libvirt_ip=
libvirt_user=
libvirt_passwd=
guest_name=
guest_user=
guest_passwd=
; hypervisor-builder can help to get below data by searching guest name
libvirt_state=
libvirt_cpu=
guest_ip=
guest_uuid=
guest_state=

[libvirt-remote]
libvirt_ip=
libvirt_user=
libvirt_passwd=
guest_name=
guest_user=
guest_passwd=
; hypervisor-builder can help to get below data by searching guest name
libvirt_uuid=
libvirt_hwuuid=
libvirt_hostname=
libvirt_version=
libvirt_state=
libvirt_cpu=
guest_ip=
guest_uuid=
guest_state=

[kubevirt]
endpoint=
token=
kube_config_file_with_cert=
kube_config_file_without_cert=
guest_name=
guest_user=
guest_passwd=
; hypervisor-builder can help to get below data by searching guest name
guest_ip=
guest_port=
guest_uuid=
guest_state=